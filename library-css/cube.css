/* https://la-cascade.io/articles/creer-un-cube-en-css */

cube, poteau, pave, toblerone {
	--width: 4cm;
	--width-half: calc(var(--width) /2);
	width: var(--width);
	display: block;
	transform-style: preserve-3d;
	padding: 0;
	text-align: center;
	background-position: center;
	border-style: solid;
	margin-bottom: 4em;
}
cube >*, poteau >*, pave >*, toblerone >* {
	border: var(--bord);
	background: var(--fond);
	width: inherit;
	height: inherit;
	margin: 0;
	color: inherit;
	position: absolute;
	top: 0;
	left: 0;
	text-align: center;
	background-position: center;
	background-size: contain;
	transform-origin: center center;
}
/* ------------------------ cube ------------------------ */

cube { height: var(--width); }
cube >*:nth-child(1), poteau >*:nth-child(1), pave >*:nth-child(1), toblerone >*:nth-child(1)
	{ transform: rotateX(90deg) translateZ(var(--width-half)); }
cube >*:nth-child(2){ transform: rotateX(-90deg) translateZ(var(--width-half)); }
cube >*:nth-child(3), poteau >*:nth-child(3), pave >*:nth-child(3), toblerone >*:nth-child(3)
	{ transform: rotateY(180deg) translateZ(var(--width-half)); }
cube >*:nth-child(4), poteau >*:nth-child(4), pave >*:nth-child(4) { transform: rotateY(-90deg) translateZ(var(--width-half)); }
cube >*:nth-child(5), poteau >*:nth-child(5){ transform: rotateY(90deg) translateZ(var(--width-half)); }
cube >*:nth-child(6), poteau >*:nth-child(6), pave >*:nth-child(6) { transform: translateZ(var(--width-half)); }
/* cube qui tourne selon spin-vertical */
cube.vertical >*:nth-child(3), poteau.vertical >*:nth-child(3), toblerone.vertical >*:nth-child(3){ transform: rotateX(180deg) translateZ(var(--width-half)); }

/* ------------------------ poteau ------------------------ */

poteau, pave, toblerone {
	--height: 7cm;
	height: var(--height);
}
poteau >*:nth-child(1), toblerone >*:nth-child(1){ height: var(--width); }
poteau >*:nth-child(2), pave >*:nth-child(2), toblerone >*:nth-child(2){
	height: var(--width);
	transform: rotateX(-90deg) translateZ(calc(var(--height) - var(--width-half)));
}
/* ------------------------ pavÃ© ------------------------ */

pave {
	--depth: 11cm;
	--width-half: calc(var(--depth) /2);
}
pave >*:nth-child(1), pave >*:nth-child(2){ height: var(--depth); }
pave >*:nth-child(4) { width: var(--depth); }
pave >*:nth-child(5) {
	width: var(--depth);
	transform: rotateY(90deg) translateZ(calc(var(--width) - var(--width-half)));
}
/* ------------------------ animations ------------------------ */

@keyframes spin-horizontal {
	from { transform: rotateY(0); }
	to { transform: rotateY(360deg); }
}
@keyframes spin-vertical {
	from { transform: rotateX(0); }
	to { transform: rotateX(-360deg); }
}
/* ------------------------ exemples ------------------------ */

container#mycube {
	perspective: 800px;
	perspective-origin: -100% 100px;
}
cube#mycube {
	animation: spin-vertical 5s infinite linear;
	--width: 4cm;
	--bord: double 20px yellow;
	--fond: turquoise;
	margin-top: 3cm;
}
/*
<cube id='mycube'>
	<p id='top'>top</p>
	<p id='bottom'>bottom</p>
	<p id='back'>back</p>
	<p id='left'>left</p>
	<p id='right'>right</p>
	<p id='front'>front</p>
</cube>
*/